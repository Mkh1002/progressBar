{"ast":null,"code":"export default {\n  name: \"ProgressChart\",\n  data() {\n    return {\n      radius: 16,\n      center: 16,\n      value: 0,\n      status: \"未知\"\n    };\n  },\n  computed: {\n    dasharray() {\n      const circumference = 2 * Math.PI * this.radius;\n      return `${circumference} ${circumference}`;\n    },\n    dashoffset() {\n      const circumference = 2 * Math.PI * this.radius;\n      const percent = this.value / 100;\n      return circumference * (1 - percent);\n    }\n  },\n  methods: {\n    updateProgress() {\n      if (this.value === 0) {\n        this.status = \"未知\";\n      } else if (this.value <= 50) {\n        this.status = \"正常\";\n      } else {\n        this.status = \"报警\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","radius","center","value","status","computed","dasharray","circumference","Math","PI","dashoffset","percent","methods","updateProgress"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div class=\"progress-container\">\n    <svg class=\"chart\" viewBox=\"0 0 32 32\" width=\"120\" height=\"120\">\n      <circle class=\"chart-background\" :r=\"radius\" :cx=\"center\" :cy=\"center\" />\n      <circle\n        class=\"chart-progress\"\n        :r=\"radius\"\n        :cx=\"center\"\n        :cy=\"center\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n      <text class=\"chart-status\" :x=\"center\" :y=\"center + 4\">{{ status }}</text>\n      <text class=\"chart-value\" :x=\"center\" :y=\"center - 6\">{{ value }}%</text>\n    </svg>\n    <div class=\"slider\">\n      <input\n        type=\"range\"\n        min=\"0\"\n        max=\"100\"\n        v-model=\"value\"\n        @input=\"updateProgress\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"ProgressChart\",\n  data() {\n    return {\n      radius: 16,\n      center: 16,\n      value: 0,\n      status: \"未知\",\n    };\n  },\n  computed: {\n    dasharray() {\n      const circumference = 2 * Math.PI * this.radius;\n      return `${circumference} ${circumference}`;\n    },\n    dashoffset() {\n      const circumference = 2 * Math.PI * this.radius;\n      const percent = this.value / 100;\n      return circumference * (1 - percent);\n    },\n  },\n  methods: {\n    updateProgress() {\n      if (this.value === 0) {\n        this.status = \"未知\";\n      } else if (this.value <= 50) {\n        this.status = \"正常\";\n      } else {\n        this.status = \"报警\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.progress-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.chart {\n  margin: 0 auto;\n}\n\n.chart-background,\n.chart-progress {\n  fill: none;\n  stroke: #ddd;\n  stroke-width: 1.5;\n  border-radius\n}\n\n.chart-progress {\n  stroke: #159afa;\n  transition: stroke-dashoffset 0.5s;\n}\n\n.chart-status,\n.chart-value {\n  font-size: 8px;\n  text-anchor: middle;\n}\n\n.slider {\n  width: 120px;\n  margin: 0 auto;\n}\n\ninput[type=\"range\"] {\n  margin: 0;\n  padding: 0;\n  height: 5px;\n  -webkit-appearance: none;\n  background-color: #ddd;\n  border-radius: 2.5px;\n\n  &::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    width: 10px;\n    height: 10px;\n    background-color: #159afa;\n    border-radius: 50%;\n  }\n}\n</style>\n"],"mappings":"AA4BA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,MAAA;MACAC,KAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,UAAA;MACA,MAAAC,aAAA,OAAAC,IAAA,CAAAC,EAAA,QAAAR,MAAA;MACA,UAAAM,aAAA,IAAAA,aAAA;IACA;IACAG,WAAA;MACA,MAAAH,aAAA,OAAAC,IAAA,CAAAC,EAAA,QAAAR,MAAA;MACA,MAAAU,OAAA,QAAAR,KAAA;MACA,OAAAI,aAAA,QAAAI,OAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,SAAAV,KAAA;QACA,KAAAC,MAAA;MACA,gBAAAD,KAAA;QACA,KAAAC,MAAA;MACA;QACA,KAAAA,MAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}